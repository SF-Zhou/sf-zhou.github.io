<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="/dist/favicon.ico">
    <link rel="apple-touch-icon" href="/dist/favicon.png">
    <link rel="stylesheet" type="text/css" href="/dist/highlight.css">
    <link rel="stylesheet" type="text/css" href="/dist/katex.min.css">
    <link rel="stylesheet" type="text/css" href="/dist/main.css">
    <title>Rust RDMA RPC 框架设计 | SF-Zhou's Blog</title>
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-GQ26H3JQ3G"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-GQ26H3JQ3G');
    </script>
  </head>
  <body>
    <div class="app">
      <div class="title">
        <h1> Rust RDMA RPC 框架设计 </h1>
      </div>
      <div class="info">
        <div class="date"> 2024.08.02 </div>
        <a href="https://github.com/SF-Zhou">
          <div class="author"> SF-Zhou </div>
        </a>
      </div>
      <div class="markdown">
        <h3 id="1.-defination" tabindex="-1"><a href="#1.-defination">1. Defination</a></h3>
<ol>
<li>元信息 MsgMeta：需要调用的服务的名称、方法名、UUID、字节流的类型等</li>
<li>消息 Message：元信息 + 有边界的字节流组成的实体</li>
<li>连接 Transport：传递消息的载体 trait，支持主动发或被动收消息</li>
<li>连接管理器 TransportMgr：创建、管理连接的 trait，不同类型的连接使用不同类型的管理器</li>
<li>调度 Dispatcher：根据消息的元信息，将消息派发给对应的 Service</li>
<li>服务 Service：对连接上被动收到的消息作出响应的实体，对外暴露统一接口</li>
<li>请求 Request：Service 根据元信息和字节流，反序列化后得到的结果</li>
<li>回复 Response：Service 处理请求后得到的返回值，序列化后与元信息一同丢给 Transport</li>
</ol>
<h3 id="2.-vision" tabindex="-1"><a href="#2.-vision">2. Vision</a></h3>
<ol>
<li>支持多种<strong>连接方式</strong>，包括但不限于：
<ol>
<li>TCP Socket</li>
<li>RDMA (IB / RoCE)</li>
<li>HTTP</li>
</ol>
</li>
<li>支持多种<strong>数据协议</strong>，包括但不限于：
<ol>
<li>derse</li>
<li>protobuf</li>
<li>JSON</li>
</ol>
</li>
<li>支持多种 Service 自由搭配
<ol>
<li>rdma_service：提供 RDMA 信息查询、建立连接的能力</li>
<li>info_service：查询 Server 自身相关信息</li>
<li>webui_service：基于 HTTP，提供 WebUI 界面</li>
<li>user_service：用户自定义服务</li>
</ol>
</li>
<li>提供良好的可观测性
<ol>
<li>QPS、Latency、Inflight、Fails 等指标在线查询和上报</li>
<li>支持在线查询当前日志</li>
<li>CPU profiler / Mem profiler</li>
</ol>
</li>
</ol>
<h3 id="3.-details" tabindex="-1"><a href="#3.-details">3. Details</a></h3>
<ol>
<li>Transport 收到的消息是一段有边界的字节流 Bytes，我需要从中解析出 MsgMeta 和 Payload</li>
<li>同步调用 dispatcher.call(transport, meta, payload)，无需返回值
<ol>
<li>payload 是需要被 meta 描述的，至少它是有类型的（二进制、JSON、protobuf）</li>
<li>meta 是由消息头解析得到的，无论是二进制消息头还是 JSON 消息头</li>
</ol>
</li>
<li>一个 Service 支持的序列化方式是由 Service 自己决定的，它可以支持 protobuf，也可以支持 JSON / derse，只需要它能够将 payload 与自身的数据结构无缝转换</li>
<li>一个 Service 最终暴露出来的接口类似于 service.call(transport, meta, payload)，无需返回值</li>
<li>Service 的返回值是可以自定义的，为 <code>Result&lt;T, E&gt;</code>，但要求实现 <code>RpcError</code> 到 <code>ServiceError</code> 的转换</li>
</ol>

      </div>
      
      <div class="footer">
        <div class="license">
          Except where otherwise noted, content on this site is licensed under a <a href="https://creativecommons.org/licenses/by-sa/4.0/">CC BY-SA 4.0</a> license.
        </div>
        <div class="copyright">
          Copyright©2017 SF-Zhou, All Rights Reserved. Powered by <a href="https://pages.github.com/">GitHub Pages</a> and <a href="https://github.com/features/actions">GitHub Actions</a>.
        </div>
      </div>
    </div>
    <script src="/dist/main.js"></script>
  </body>
</html>
